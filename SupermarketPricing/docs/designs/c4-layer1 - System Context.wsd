@startuml diagram name
title
System Context Diagram
end title

note as GeneralNote
based off C4Model https://c4model.com/

Levels Cheatsheet:
- System Context: 
    the big picture showing your system and whatever other systems and users it interacts with, actors, roles, personas, etc

- Container: 
    A container is something that needs to be running in order for the overall software system to work. 
    A container is essentially a context or boundary inside which some code is executed or some data is stored. 
    And each container is a separately deployable/runnable thing or runtime environment

- Component:
    A component is a grouping of related functionality encapsulated behind a well-defined interface
    It's a collection of implementation classes behind an interface
    Aspects such as how those components are packaged (e.g. one component vs many components per JAR file, DLL, shared library, etc) is a separate and orthogonal concern.
    An important point to note here is that all components inside a container typically execute in the same process space. In the C4 model, components are not separately deployable units.

- Code:
    This is an optional level of detail and is often available on-demand from tooling such as IDEs. 
    Ideally this diagram would be automatically generated using tooling (e.g. an IDE or UML modelling tool),
    and you should consider showing only those attributes and methods that allow you to tell the story that you want to tell. 
    This level of detail is not recommended for anything but the most important or complex components.

end note

